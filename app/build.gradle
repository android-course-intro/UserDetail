apply plugin: 'com.android.application'apply plugin: 'kotlin-android'apply plugin: 'kotlin-android-extensions'apply plugin: 'kotlin-kapt'android {    compileSdkVersion rootProject.compileSdkVersion    defaultConfig {        applicationId "kz.kyrmyzyanik.userdetail"        minSdkVersion rootProject.minSdkVersion        targetSdkVersion rootProject.compileSdkVersion        versionCode 1        versionName "1.0.0"        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"        vectorDrawables.useSupportLibrary = true    }    buildTypes {        release {            shrinkResources true            minifyEnabled true            debuggable false        }        debug {            applicationIdSuffix ".dev"            debuggable true        }    }    dataBinding.enabled true    sourceSets {        main.java.srcDirs += 'src/main/kotlin'        test.java.srcDirs += 'src/test/kotlin'        androidTest.java.srcDirs += 'src/androidTest/kotlin'    }    testOptions {        unitTests.returnDefaultValues = true    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_8        targetCompatibility JavaVersion.VERSION_1_8    }    lintOptions {        abortOnError true        absolutePaths false        disable 'InvalidPackage', 'ContentDescription'        lintConfig file("$rootProject.projectDir/lint.xml")    }    lintOptions {        checkReleaseBuilds false        // Or, if you prefer, you can continue to check for errors in release builds,        // but continue the build even when errors are found:        abortOnError false    }    buildToolsVersion '28.0.3'}detekt {    version = "1.0.0.RC6-3"    profile("main") {        input = "$projectDir/src/main/kotlin"    }}configurations.all {    resolutionStrategy {        eachDependency { details ->            if (details.requested.name == "kotlin-stdlib-jre8") {                details.useTarget group: details.requested.group, name: "kotlin-stdlib-jdk8", version: details.requested.version            }            if (details.requested.name == "kotlin-stdlib-jre7") {                details.useTarget group: details.requested.group, name: "kotlin-stdlib-jre7", version: details.requested.version            }        }    }}apply from: 'dependencies.gradle'dependencies {    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"    implementation "org.jetbrains.anko:anko-commons:$anko_version"    implementation fileTree(include: ['*.jar'], dir: 'libs')    implementation supportLibs    //this branch updates    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.0'    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.0'    implementation architectureLibs    kapt architectureCompiler    // architecture components    testImplementation unitTestLibs    androidTestImplementation androidTestsLibs    implementation networkLibs    implementation daggerLibs    // for annotations    implementation timberLibs    implementation butterKnifeLibs    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"    implementation "org.jetbrains.anko:anko-commons:$anko_version"    implementation dimensionLibs        kapt butterKnifeCompiler    kapt daggerCompiler    // Leakcanary    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'    // Debug only dependencies    debugImplementation 'com.facebook.stetho:stetho:1.5.0'    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'}apply plugin: 'kotlin-android-extensions'androidExtensions {    experimental = true}