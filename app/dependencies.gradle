ext {
    versions = [

            support         : "1.0.0",
            lifecycle       : "2.0.0-beta01",
            room            : "2.1.0-alpha05",
            constraint      : "1.1.3",
            okHttp          : "3.10.0",
            retrofit        : '2.4.0',
            espresso        : '2.2.2',
            espressoRunner  : '0.5',
            powerMock       : '1.6.6',
            hamcrest        : '1.3',
            restMock        : '0.2.0',
            dagger          : '2.21',
            kotlinCoroutines: '1.1.0',
            butterKnife     : '10.1.0',
            sdp             : '1.0.4',
            timber          : '1.3.0'
    ]

    mockito = [mockito: "org.mockito:mockito-core:2.6.8"]
    junit = [junit: "junit:junit:4.12"]
    restMock = [restMock: "com.github.andrzejchm.RESTMock:android:$versions.restMock"]

    supportDeps = [
            appcompatV7: "androidx.appcompat:appcompat:$versions.support",
            design     : "com.google.android.material:material:1.0.0-rc01",
            constraint : "androidx.constraintlayout:constraintlayout:$versions.constraint",
            recylerview: "androidx.recyclerview:recyclerview:$versions.support"
    ]

    architectureDeps = [
            // ViewModel and LiveData
            lifecycle_ext   : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
            // ReactiveStreams support for LiveData
            lifecycle_stream: "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle",

            room            : "androidx.room:room-runtime:$versions.room",
            //Kotlin Extensions and Coroutines support for Room
            room_coroutine  : "androidx.room:room-ktx:$versions.room"
    ]

    architectureApt = [
            lifecycle_compiler: "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
            room_compiler     : "androidx.room:room-compiler:$versions.room",
    ]

    retrofit = [
            retrofit     : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter    : "com.squareup.retrofit2:adapter-rxjava:$versions.retrofit",
            gsonConverter: "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    ]

    dagger = [
            dagger              : "com.google.dagger:dagger:$versions.dagger",
            daggerAndroid       : "com.google.dagger:dagger-android:$versions.dagger",
            daggerAndroidSupport: "com.google.dagger:dagger-android-support:$versions.dagger"
    ]

    daggerApt = [
            daggerCompiler       : "com.google.dagger:dagger-compiler:$versions.dagger",
            daggerAndroidCompiler: "com.google.dagger:dagger-android-processor:$versions.dagger"
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp: "com.squareup.okhttp3:okhttp:$versions.okHttp"
    ]
    unitTest = [
            harcrestCore       : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib       : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration: "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            robolectric        : "org.robolectric:robolectric:3.2.2",
            supportAnnotation  : "com.android.support:support-annotations:$versions.support",
            restMock           : "com.github.andrzejchm.RESTMock:android:$versions.restMock",
            assertj            : "com.squareup.assertj:assertj-android:1.1.1"
    ] + junit + mockito + restMock

    androidTests = [
            espressoCore   : "com.android.support.test.espresso:espresso-core:$versions.espresso",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:$versions.espresso",
            testRunner     : "com.android.support.test:runner:$versions.espressoRunner",
            testRules      : "com.android.support.test:rules:$versions.espressoRunner",
    ] + mockito + restMock

    dimensionDep = [
            sdp: "com.intuit.sdp:sdp-android:$versions.sdp",
            ssp: "com.intuit.ssp:ssp-android:$versions.sdp"
    ]

    butterKnife = [
            butterknife: "com.jakewharton:butterknife:$versions.butterKnife"
    ]

    supportLibs = supportDeps.values()
    architectureLibs = architectureDeps.values()
    architectureCompiler = architectureApt.values()
    networkLibs = retrofit.values() + okHttp.values()
    daggerLibs = dagger.values()
    daggerCompiler = daggerApt.values()
    unitTestLibs = unitTest.values()
    androidTestsLibs = androidTests.values() + supportLibs
    dimensionLibs = dimensionDep.values()

    timberLibs = "com.github.ajalt:timberkt:$versions.timber"
    butterKnifeLibs = butterKnife.values()
    butterKnifeCompiler = "com.jakewharton:butterknife-compiler:$versions.butterKnife"
    leakCannary = "com.squareup.leakcanary:leakcanary-android:1.5"

}